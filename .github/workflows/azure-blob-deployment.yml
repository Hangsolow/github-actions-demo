name: Interact with Azure ressources via OIDC
run-name: Deploy to Azure
on:
  push:
    branches:
      - "test/*"
      - main
env:
  FRONTEND_STORAGE_ACCOUNT: frontenddeployments
jobs:
  find-environment:
    runs-on: ubuntu-latest
    outputs:
      env_name: ${{ steps.prod.outputs.env_name || steps.test.outputs.env_name }}
      version_increment_mode: ${{ steps.prod.outputs.version_increment_mode || steps.test.outputs.version_increment_mode }}
    steps:
      - name: production environment
        id: prod
        if: ${{ github.ref_name == 'main' }}
        run: |
          echo "env_name=prod" >> $GITHUB_OUTPUT
          echo "version_increment_mode=minor" >> $GITHUB_OUTPUT
      - name: test environment
        id: test
        if: ${{ github.ref_name != 'main' }}
        run: |
          echo "env_name=test" >> $GITHUB_OUTPUT
          echo "version_increment_mode=patch" >> $GITHUB_OUTPUT

  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: frontend-dist
          path: src/frontend/dist/
          if-no-files-found: error

  frontend:
    runs-on: ubuntu-latest
    needs:
      - find-environment
      - build
    permissions:
      id-token: write
      contents: read
    concurrency: ${{ needs.find-environment.outputs.env_name }}
    outputs:
      next_version: ${{ steps.fe-deploy.outputs.version }}
    steps:
      # must checkout the code to get the local actions
      - name: Checkout
        uses: actions/checkout@v3
      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: frontend-dist
          path: src/frontend/dist/
      - name: Deploy to Azure
        id: fe-deploy
        uses: ./.github/actions/fe-deploy
        with:
          increment_mode: ${{ needs.find-environment.outputs.version_increment_mode }}
          azure_storage_account: frontenddeployments
          blob_folder: ${{ needs.find-environment.outputs.env_name }}

  frontend-sync-prod-to-test:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    name: Sync production code to test environment
    if: ${{ needs.find-environment.outputs.env_name == 'prod' }}
    needs:
      - find-environment
      - frontend
    concurrency: test
    steps:
      # must checkout the code to get the local actions
      - name: Checkout
        uses: actions/checkout@v3
      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: frontend-dist
          path: src/frontend/dist/
      - name: Sync production code to test environment
        uses: ./.github/actions/fe-deploy
        with:
          environment: test
          azure_storage_account: frontenddeployments
          blob_folder: test
  summery:
    permissions:
      contents: write
    runs-on: ubuntu-latest
    needs:
      - find-environment
      - frontend
    steps:
      - name: create prod release
        if: ${{ needs.find-environment.outputs.env_name == 'prod' }}
        uses: actions/github-script@v6
        with:
          script: |
            await github.rest.repos.createRelease({ owner: context.repo.owner, repo: context.repo.repo, tag_name: "v${{ needs.frontend.outputs.next_version }}", generate_release_notes: true });
      - name: Generate summery
        run: |
          echo "### Deployment of ${{ needs.frontend.outputs.next_version }} to ${{ needs.find-environment.outputs.env_name }} environment :rocket:" >> $GITHUB_STEP_SUMMARY
